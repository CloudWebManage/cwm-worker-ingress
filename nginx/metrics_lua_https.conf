lua_shared_dict prometheus_metrics 10M;
init_worker_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_requests = prometheus:counter(
        "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram(
        "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
}

server {
    listen 9146;
    content_by_lua_block {
        local sock = assert(ngx.req.socket(true))
        local data = sock:receive()
        local location = "GET /metrics"
        if string.sub(data, 1, string.len(location)) == location then
            ngx.say("HTTP/1.1 200 OK")
            ngx.say("Content-Type: text/plain")
            ngx.say("")
            ngx.say(table.concat(prometheus:metric_data(), ""))
        else
            ngx.say("HTTP/1.1 404 Not Found")
        end
    }
}
