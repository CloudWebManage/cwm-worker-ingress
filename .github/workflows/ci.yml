name: CI
on:
  push:
jobs:
  ci:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_TOKEN: ${{ secrets.PACKAGES_READER_GITHUB_TOKEN }}
        PACKAGES_READER_GITHUB_USER: ${{ secrets.PACKAGES_READER_GITHUB_USER }}
        CWM_WORKER_HELM_DEPLOY_KEY: ${{ secrets.CWM_WORKER_HELM_DEPLOY_KEY }}
      run: |
        sudo apt-get install -y python3-venv redis-tools &&\
        python3 -m venv venv &&\
        venv/bin/python3 -m pip install --upgrade pip &&\
        venv/bin/python3 -m pip install --upgrade setuptools wheel &&\
        venv/bin/python -m pip install -r requirements.txt &&\
        venv/bin/python -m pip install -e . &&\
        docker run -d --rm --name redis -p 6379:6379 redis
        [ "$?" != "0" ] && echo failed to initialize for tests && exit 1
        while ! redis-cli ping; do sleep 1; done
        DEBUG=yes REDIS_HOST=172.17.0.1 venv/bin/cwm_worker_ingress vdns 10053 >log.txt 2>&1 &
        echo 172.17.0.1 cwm-worker-test.com | sudo tee -a /etc/hosts &&\
        . venv/bin/activate
        [ "$?" != "0" ] && exit 1
        echo ERROR > status.txt
        ( ./run_tests.sh && echo OK > status.txt ) & PID=$!
        ELAPSED_SECONDS=0
        while true; do
          sleep 1 && ELAPSED_SECONDS="$(expr $ELAPSED_SECONDS + 1)"
          ! kill -0 $PID && break
          [ "${ELAPSED_SECONDS}" == "60" ] && echo TIMEOUT > status.txt && break
        done
        echo "status.txt=$(cat status.txt)"
        echo "-- vdns server log --"
        cat log.txt
        echo "-- vdns server metrics --"
        cat .metrics
        [ "$(cat status.txt)" != "OK" ] && echo tests failed && exit 1
        echo "${GITHUB_TOKEN}" | docker login https://docker.pkg.github.com -u cloudwebmanage --password-stdin &&\
        docker pull docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:latest &&\
        docker pull docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:latest &&\
        docker build -t vdns --cache-from docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:latest . &&\
        docker build -t nginx --cache-from docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:latest nginx &&\
        docker tag vdns docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:$GITHUB_SHA &&\
        docker tag nginx docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:$GITHUB_SHA &&\
        docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:$GITHUB_SHA &&\
        docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:$GITHUB_SHA &&\
        if [ "${GITHUB_REF}" == "refs/heads/master" ]; then
          docker tag vdns docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:latest &&\
          docker tag nginx docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:latest &&\
          docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/vdns:latest &&\
          docker push docker.pkg.github.com/cloudwebmanage/cwm-worker-ingress/nginx:latest &&\
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" &&\
          chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl &&\
          kubectl version --client &&\
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&\
          chmod +x minikube && sudo mv minikube /usr/local/bin/minikube &&\
          minikube version &&\
          curl -Ls https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz -ohelm.tar.gz &&\
          tar -xzvf helm.tar.gz && sudo mv linux-amd64/helm /usr/local/bin/helm &&\
          sudo chmod +x /usr/local/bin/helm &&\
          rm -rf linux-amd64 && rm helm.tar.gz &&\
          helm version &&\
          minikube start --driver=docker --kubernetes-version=v1.16.14 &&\
          kubectl get nodes &&\
          echo '{"auths":{"docker.pkg.github.com":{"auth":"'"$(echo -n "${PACKAGES_READER_GITHUB_USER}:${PACKAGES_READER_GITHUB_TOKEN}" | base64 -w0)"'"}}}' \
              | kubectl create secret generic github --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=/dev/stdin &&\
          helm upgrade --install cwm-worker-ingress ./helm &&\
          cat tests/k8s-tests.yaml | kubectl apply -f -
          [ "$?" != "0" ] && exit 1
          ELAPSED_SECONDS=0
          while ! kubectl exec -c redis "$(kubectl get pods | grep cwm-worker-ingress | cut -d" " -f 1)" -- redis-cli ping; do
            sleep 1 && ELAPSED_SECONDS="$(expr $ELAPSED_SECONDS + 1)"
            [ "${ELAPSED_SECONDS}" == "30" ] && exit 1
          done
          kubectl exec -c redis "$(kubectl get pods | grep cwm-worker-ingress | cut -d" " -f 1)" -- redis-cli set worker:available:tests.cwm-worker-ingress.com "" &&\
          kubectl exec -c redis "$(kubectl get pods | grep cwm-worker-ingress | cut -d" " -f 1)" -- redis-cli set worker:ingress:hostname:tests.cwm-worker-ingress.com "tests.default.svc.cluster.local"
          [ "$?" != "0" ] && exit 1
          ELAPSED_SECONDS=0
          while ! kubectl exec tests -- true; do
            sleep 1 && ELAPSED_SECONDS="$(expr $ELAPSED_SECONDS + 1)"
            [ "${ELAPSED_SECONDS}" == "30" ] && exit 1
          done
          STATUS=OK
          ELAPSED_SECONDS=0
          while ! kubectl exec tests -- curl -H 'Host: tests.cwm-worker-ingress.com' http://cwm-worker-ingress | grep 'Thank you for using nginx'; do
            sleep 1 && ELAPSED_SECONDS="$(expr $ELAPSED_SECONDS + 1)"
            [ "${ELAPSED_SECONDS}" == "30" ] && STATUS=TIMEOUT && break
          done
          echo STATUS=$STATUS
          POD=$(kubectl get pods | grep cwm-worker-ingress | tee /dev/stderr | cut -d " " -f1)
          kubectl describe pod tests
          kubectl describe pod $POD
          echo "-- redis logs --"
          kubectl logs $POD -c redis
          echo "-- nginx logs --"
          kubectl logs $POD -c nginx
          echo "-- vdns logs --"
          kubectl logs $POD -c vdns
          [ "${STATUS}" != "OK" ] && exit 1
          echo "${CWM_WORKER_HELM_DEPLOY_KEY}" > cwm_worker_helm_deploy_key &&\
          chmod 400 cwm_worker_helm_deploy_key &&\
          export GIT_SSH_COMMAND="ssh -i $(pwd)/cwm_worker_helm_deploy_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" &&\
          git clone git@github.com:CloudWebManage/cwm-worker-helm.git &&\
          git config --global user.name "cwm-worker-ingress CI" &&\
          git config --global user.email "cwm-worker-ingress-ci@localhost" &&\
          sed -i "s/appVersion: latest/appVersion: ${GITHUB_SHA}/g" helm/Chart.yaml &&\
          helm package ./helm --version "0.0.0-$(date +%Y%m%dT%H%M%S)" --destination ./cwm-worker-helm/cwm-worker-ingress &&\
          helm repo index --url "https://raw.githubusercontent.com/CloudWebManage/cwm-worker-helm/master/cwm-worker-ingress/" ./cwm-worker-helm/cwm-worker-ingress &&\
          cd cwm-worker-helm &&\
          git add cwm-worker-ingress &&\
          git commit -m "automatic update of cwm-worker-ingress" &&\
          git push origin master
        fi
